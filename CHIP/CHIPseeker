#参考网址：https://bioconductor.org/packages/release/bioc/vignettes/ChIPseeker/inst/doc/ChIPseeker.html

#step0: 安装并加载相应的R包
options(repos=structure(c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/")))
options(stringsAsFactors = F)

library(ChIPseeker)
library(org.Mm.eg.db)
library(TxDb.Mmusculus.UCSC.mm10.knownGene)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(clusterProfiler)
library(org.Hs.eg.db)

txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene

#step1:导入peak文件
setwd("/home/wangjiaqi/data_HD_1/chipseq/peaks")
suz12<-readPeakFile("suz12_peaks.narrowPeak")
cbx7<-readPeakFile("cbx7_peaks.narrowPeak")
ring1B<-readPeakFile("ring1B_peaks.narrowPeak")
RYBP<-readPeakFile("ring1B_peaks.narrowPeak")

#step2:查看peak在全基因组的位置
covplot(suz12,weightCol=5)#covplot函数可以计算peak 在染色体上的覆盖区域，并可视化。
covplot(suz12, weightCol=5, chrs=c("chr4", "chr5"), xlim=c(4.5e7, 5e7)) #还可以定义具体的染色体

#step3:ChIP peaks结合TSS 区域的情况

#首先，计算ChIP peaks结合在TSS区域的情况。这就需要准备TSS区域，这一般定义在TSS位点的侧翼序列（默认-3000~+3000）。然后比对 map到这些区域的peak，并生成tagMatrix。
promoter <- getPromoters(TxDb=txdb, upstream=3000, downstream=3000)
tagMatrix <- getTagMatrix(suz12, windows=promoter)
tagHeatmap(tagMatrix, xlim=c(-3000, 3000), color="red")
plotAvgProf(tagMatrix, xlim=c(-3000, 3000),
            conf=0.95,resample = 1000,
            xlab="Genomic Region (5'->3')", ylab = "Read Count Frequency")

#step4:peak注释
peakAnno <- annotatePeak(suz12, tssRegion=c(-3000, 3000),
                         TxDb=txdb, annoDb="org.Mm.eg.db")
#step4.1 Visualize Genomic Annotation
plotAnnoPie(peakAnno)
plotAnnoBar(peakAnno)
vennpie(peakAnno)
upsetplot(peakAnno)
upsetplot(peakAnno, vennpie=TRUE)
#step4.2 Visualize distribution of TF-binding loci relative to TSS
plotDistToTSS(peakAnno,
              title="Distribution of transcription factor-binding loci\nrelative to TSS")

#step5:Functional enrichment analysis

#目前R包上的富集分析功能 不能正常使用，卡在“No gene can be mapped....”上，但是可以导出基因集在在线分析网站上分析。
library(ReactomePA)
pathway1 <- enrichPathway(as.data.frame(peakAnno)$geneId) #基因ID转换
pathway1 <- enrichPathway(gene)
head(pathway1, 2)

#seq2gene
gene <- seq2gene(suz12, tssRegion = c(-1000, 1000), flankDistance = 3000, TxDb=txdb)
pathway2 <- enrichPathway(gene)
head(pathway2, 2)

#step6:ChIP peak data set comparison——Profile of several ChIP peak data binding to TSS region
#6.1利用getTagMatrix准备单个TagMatrix矩阵
promoter <- getPromoters(TxDb=txdb, upstream=3000, downstream=3000)

Tsuz12<- getTagMatrix(peak = suz12,windows=promoter)
Tcbx7<- getTagMatrix(peak = cbx7,windows=promoter)
TRYBP<-getTagMatrix(peak = RYBP,windows=promoter)
Tring1B<-getTagMatrix(peak = ring1B,windows=promoter)
#6.2合并Matrix为list
tagMatrixList<-list(Tsuz12,Tcbx7,TRYBP,Tring1B)
#6.3改名字
names(tagMatrixList)<-c("suz12","cbx7","RYBP","ring1B")
#6.4可视化
plotAvgProf(tagMatrixList, xlim=c(-3000, 3000))
plotAvgProf(tagMatrixList, xlim=c(-3000, 3000), conf=0.95,resample=500, facet="row") #添加置信区间，且分栏呈现，运行时比较耗CPU
tagHeatmap(tagMatrixList, xlim=c(-3000, 3000), color=NULL)

#step7:ChIP peak data set comparison——ChIP peak annotation comparision
#7.1利用annotatePeak准备单个注释文件
Asuz12<- annotatePeak(suz12, tssRegion=c(-3000, 3000),
                      TxDb=txdb, annoDb="org.Mm.eg.db")
Acbx7<- annotatePeak(cbx7, tssRegion=c(-3000, 3000),
                     TxDb=txdb, annoDb="org.Mm.eg.db")
ARYBP<-annotatePeak(RYBP, tssRegion=c(-3000, 3000),
                    TxDb=txdb, annoDb="org.Mm.eg.db")
Aring1B<-annotatePeak(ring1B, tssRegion=c(-3000, 3000),
                      TxDb=txdb, annoDb="org.Mm.eg.db")
#7.2合并list
peakAnnoList<-list(Asuz12,Acbx7,ARYBP,Aring1B)
#7.3改名字
names(peakAnnoList)<-c("suz12","cbx7","RYBP","ring1B")
#7.4可视化
plotAnnoBar(peakAnnoList)
plotDistToTSS(peakAnnoList)

#step8:Overlap of peaks and annotated genes
genes= lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)
vennplot(genes)

#step9:Statistical testing of ChIP seq overlap
#没搞清楚导入文件是什么？是.bed文件，还是.narrowpeak文件，导入不同文件tLEN、N_OL结果不一样，但pvalue保持一致。
p <- GRanges(seqnames=c("chr1", "chr3"),
             ranges=IRanges(start=c(1, 100), end=c(50, 130)))
shuffle(p, TxDb=txdb)

?enrichPeakOverlap
Bcbx7<-readPeakFile("cbx7_summits.bed")
Bring1B<-readPeakFile("ring1B_summits.bed")
BRYBP<-readPeakFile("RYBP_summits.bed")
Bsuz12<-readPeakFile("suz12_summits.bed")
GRangeslists<-list(cbx7,ring1B,RYBP,suz12)
GRangeslists1<-list(Bcbx7,Bring1B,BRYBP,Bsuz12)
names(GRangeslists)<-c("cbx7","ring1B","RYBP","suz12")
enrichPeakOverlap(queryPeak     = cbx7,
                  targetPeak    = unlist(GRangeslists[2:4]),
                  TxDb          = txdb,
                  pAdjustMethod = "BH",
                  nShuffle      = 50,
                  chainFile     = NULL,
                  verbose       = FALSE)

enrichPeakOverlap(queryPeak     = Bcbx7,
                  targetPeak    = unlist(GRangeslists[2:4]),
                  TxDb          = txdb,
                  pAdjustMethod = "BH",
                  nShuffle      = 50,
                  chainFile     = NULL,
                  verbose       = FALSE)
#INPUT:
#queryPeak：query bed file or GRanges object
#targetPeak: target bed file(s) or folder that containing bed files or a list of GRanges objects
#nShuffle :To speed up the compilation of this vignettes, we only set nShuffle to 50 as an example for only demonstration. User should set the number to 1000 or above for more robust result. 

#OUTPUT:
#qSample is the name of queryPeak
#qLen is the the number of peaks in queryPeak. 
#N_OL is the number of overlap between queryPeak and targetPeak.

#step10:Data Mining with ChIP seq data deposited in GEO

#There are many ChIP seq data sets that have been published and deposited in GEO database. 
#We can compare our own dataset to those deposited in GEO to search for significant overlap data. 
#Significant overlap of ChIP seq data by different binding proteins may be used to infer cooperative regulation and thus can be used to generate hypotheses.
#We collect about 17,000 bed files deposited in GEO, user can use getGEOspecies to get a summary based on speices.
getGEOspecies()
getGEOgenomeVersion()
mm10 <- getGEOInfo(genome="mm10", simplify=TRUE) #If simplify is set to FALSE, extra information including source_name, extract_protocol, description, data_processing and submission_date will be incorporated.
head(mm10)

downloadGEObedFiles(genome="mm10", destDir="mm10")
mm10$gsm[sample(nrow(mm10), 10)]

