setwd("C:\\Users\\Administrator\\Desktop\\test")
library(dplyr)
library(tidyr)
library(data.table)
library(GEOquery)

#######################################################################################################################################
#####################################################       1.下载基因芯片数据     ######################################################
#######################################################################################################################################

GSE78144 <- getGEO('GSE78144', destdir="C:\\Users\\Administrator\\Desktop\\test"
                   ,GSEMatrix=TRUE
                   ,AnnotGPL=FALSE
                   ,getGPL=F)
#注意保存位置不要有中文名字，不然不能正常读取文件

#获取表达矩阵exprSet和注释信息pdata
exprSet = exprs(GSE78144[[1]])
pData=pData(GSE78144[[1]])

#######################################################################################################################################
#####################################                       2.探针ID和基因的转换                     ####################################
#######################################################################################################################################
方法一：利用R包转化ID
可参考：https://github.com/jmzeng1314/my-R/blob/master/9-microarray-examples/GSE1462.R以及生信技能书视频
判断GPL是否有R包可用：
  方式1：百度搜索GPLxxx r package，看有无bioconductor的链接
  方式2：去《用R获取芯片探针与基因的对应关系三部曲-bioconductor》看有无对应的R包（http://www.bio-info-trainee.com/1399.html）
方法一比较方便，故优先选择。

方法二：当没有R包可以自动转换ID，需要我们自行下载NCBI的GPL.soft文件
（方法详解来源：http://mp.weixin.qq.com/s?__biz=MzIyMzA2MTcwMg==&mid=2650732920&idx=1&sn=265f76c1d22240b55fc9b0bdfd74f3f1&chksm=f029aad1c75e23c7abdc42734a2e78cbf83f11f89344db9c97aa922584cf5b37334b040b182a&mpshare=1&scene=23&srcid=0407JhDs3m2nWRDF4sI3IQF9&sharer_sharetime=1586258214433&sharer_shareid=e30a14e2833191376bbf1cc003c8a139#rd）

###################################               1.获得探针ID和Gene symbol的对应列表             ######################################

GPL78144_anno <-data.table::fread("GSE78144_family.soft",skip = "ID")
probe2symbol_df <- GPL78144_anno %>% 
  select(ID,GENE_SYMBOL) %>% 
  #这里的GENE_SYMBOL随不同的GPL名字不一样，甚至需要处理的操作也不一样，所以对“GENE_SYMBOL”参数的调整需要依赖于GPL的类型
  #详见https://mp.weixin.qq.com/s?__biz=MzIyMzA2MTcwMg==&mid=2650732920&idx=1&sn=265f76c1d22240b55fc9b0bdfd74f3f1&chksm=f029aad1c75e23c7abdc42734a2e78cbf83f11f89344db9c97aa922584cf5b37334b040b182a&mpshare=1&scene=23&srcid=0407JhDs3m2nWRDF4sI3IQF9&sharer_sharetime=1586258214433&sharer_shareid=e30a14e2833191376bbf1cc003c8a139#rd
  filter(GENE_SYMBOL != "") #删除掉空白的gene symbol
  
write.csv(probe2symbol_df,"probe2symbol_df.csv") #导出该GPL与基因的对应列表（为了降低内存占用率）
probe2symbol_df<-read.table("probe2symbol_df.csv",header = T,sep=",")
probe2symbol_df<-probe2symbol_df[,-1] #删除无意义的第一列
#可导可不导，如果上面这些文件占内存太大，导出后保存数据后，删除上述变量

#为了是后续代码成功转化探针ID和基因的关系，故需要调整exprSet，使其具有与probe2symbol_df同样的列名“ID”
#具体方法是：由于exprSet rowname是ID号，需要提取到第一列，故导出后再导入
write.csv(exprSet,"exprSet.csv")
exprSet1<-read.table("exprSet.csv",header = T,sep=",")
names(exprSet1)[1]<-"ID" #将之前的rowname改为第一列后，改成与probe2symbol_df同样的列名“ID”，至此就做好了探针ID和基因转化的准备工作。


########################################               2.探针ID和基因的转换             ################################################

exprSet <- exprSet1 %>% 
  inner_join(probe2symbol_df,by="ID") %>% #合并探针的信息
  select(-ID) %>% #去掉多余信息
  select(GENE_SYMBOL, everything()) %>% #重新排列，
  mutate(rowMean =rowMeans(.[grep("GSM", names(.))])) %>% #求出平均数(这边的.真的是画龙点睛)
  arrange(desc(rowMean)) %>% #把表达量的平均值按从大到小排序
  distinct(GENE_SYMBOL,.keep_all = T) %>% # symbol留下第一个
  select(-rowMean) %>% #反向选择去除rowMean这一列

#######################################################################################################################################
###############################################            3.可视化/质量控制                  ################################################
#######################################################################################################################################


#3.质量控制（对表达矩阵进行可视化处理）
#模仿代码网址：http://bio-info-trainee.com/tmp/basic_visualization_for_expression_matrix.html 
#为了画箱式图、小提琴图、组图和密度图，需要利用reshape 对表达矩阵进行调整
library(reshape2)
#reshape2的详解：https://blog.csdn.net/QimaoRyan/article/details/76066589
exprSet_L=melt(exprSet) #进行melt融化时，列表中至少有一项时文本信息作为measure.vars，故需要在第一列建立一个gene symbol
head(exprSet_L)
colnames(exprSet_L)=c('gene_symbol','sample','value')
sampleType <- factor( c('LIF','LIF','LIF','LIF','mEpiSC','mEpiSC','mEpiSC','mEpiSC','t2i','t2i','t2i','t2i','t2iSB','t2iSB','t2iSB','t2iSB')  )
exprSet_L$group=rep(sampleType,each=nrow(exprSet))
library(ggplot2)
#箱式图
p=ggplot(exprSet_L,aes(x=sample,y=value,fill=group))+geom_boxplot()
print(p)
#小提琴图
p=ggplot(exprSet_L,aes(x=sample,y=value,fill=group))+geom_violin()
print(p)
#组图（histogram)
p=ggplot(exprSet_L,aes(value,fill=group))+geom_histogram(bins = 200)+facet_wrap(~sample, nrow = 4)
print(p)
#密度图（density)
p=ggplot(exprSet_L,aes(value,col=group))+geom_density()+facet_wrap(~sample, nrow = 4)
print(p)


#cluster
out.dist=dist(t(exprSet),method='euclidean')#这里的exprSet要求为数字矩阵，无文本信息，故需要去掉第一列的gene symbol
out.hclust=hclust(out.dist,method='complete')
plot(out.hclust)

#PCA
pc <- prcomp(t(exprSet),scale=TRUE)
pcx=data.frame(pc$x)
pcr=cbind(samples=rownames(pcx),group_list, pcx) 
p=ggplot(pcr, aes(PC1, PC2))+geom_point(size=5, aes(color=group_list)) +
  geom_text(aes(label=samples),hjust=-0.1, vjust=-0.3)
print(p)

#heatmap
choose_gene=names(sort(apply(exprSet, 1, mad),decreasing = T)[1:50])
choose_matrix=exprSet[choose_gene,]
choose_matrix=scale(choose_matrix)
heatmap(choose_matrix)
library(gplots)
heatmap.2(choose_matrix)
library(pheatmap)
pheatmap(choose_matrix)




#######################################################################################################################################
###############################################             4.差异分析                  ################################################
#######################################################################################################################################

####################
R 20道题
####################
#附limma R包说明书：http://www.bioconductor.org/packages/release/bioc/vignettes/limma/inst/doc/usersguide.pdf

library(limma)
#4.1准备矩阵(多组之间两两比较；两组比较的代码https://vip.biotrainee.com/d/116-limma)
#多组之间两两比较的代码，模仿网址：https://github.com/jmzeng1314/my-R/blob/master/9-microarray-examples/illuminaHGv4/GSE30669_DEG.R?from=singlemessage&isappinstalled=0
#4.1.1制作分组矩阵design
#IMPROTANT:sampleType内部文本的顺序要和exprSet的列名对应
sampleType <- factor( c('LIF','LIF','LIF','LIF','mEpiSC','mEpiSC','mEpiSC','mEpiSC','t2i','t2i','t2i','t2i','t2iSB','t2iSB','t2iSB','t2iSB')  )
design <- model.matrix(~0+  sampleType )
colnames(design) <-  levels(sampleType)
#4.1.2制作比较矩阵cont.matrix
#矩阵名称中不允许有数值作为开头，故在2i和2iSB前加了字母t，“t”无实际含义。
limmaArg='LIF-t2i,LIF-mEpiSC,LIF-t2iSB,t2i-mEpiSC,t2i-t2iSB,mEpiSC-t2iSB'
contrastsCommand=unlist(strsplit(limmaArg, split=","))
cont.matrix <- makeContrasts(contrasts=contrastsCommand, levels=design)
#Examples:makeContrasts(B-A,C-B,C-A,levels=c("A","B","C"))
####  在"A-B"的意思是指A的表达量是B的多少倍，一般A为实验组，B为对照组
####  cont.matrix里的"1"代表实验组，"-1"代表对照组，即比较关系为"1"比“-1”


#4.2差异分析
##step1
fit <- lmFit(exprSet,design) #将exprSet和design分组矩阵对应，所以之前的分组矩阵的设定至关重要。
##step2
fit2 <- contrasts.fit(fit, cont.matrix) ##这一步很重要，大家可以自行看看效果
fit2 <- eBayes(fit2)  ## default no trend !!!
options(digits = 4) 

#step3:批量导出差异结果矩阵
for(i in 1:length(contrastsCommand)){
  tempOutFile <- paste("GSE78144",".diffexp.", contrastsCommand[i],".csv", sep="")
  tempOutput = topTable(fit2, coef=i, n=Inf)
  tempOutput = na.omit(tempOutput) 
  tempOutput$geneSymbol=rownames(tempOutput) #在tempOutput加上一列gene symbol
  #由于导入的exprSet是探针ID已经转化过到gene symbol上了，故不需要像原代码一样在这里转化ID，转换ID的过程详见步骤3
  write.csv(tempOutput,tempOutFile,quote=FALSE,row.names = F)
}

head(tempOutput)
##               logFC  AveExpr         t      P.Value  adj.P.Val        B
## 39400_at -1.0284628 5.620700 -5.835799 8.340576e-06 0.03344118 3.233915
## 36131_at  0.9888221 9.954273  5.771526 9.667514e-06 0.03344118 3.116707
## 33791_at  1.8301554 6.950685  5.736161 1.048765e-05 0.03344118 3.051940
## 1303_at  -1.3835699 4.463438 -5.731733 1.059523e-05 0.03344118 3.043816
## 36122_at  0.7801404 7.259612  5.141064 4.205709e-05 0.10619415 1.934581
## 36939_at  2.5471980 6.915045  5.038301 5.362353e-05 0.11283285 1.736846

#每一个表头的含义如下：
#The logFC column gives the value of the contrast. Usually this represents a log2-fold change between two or more experimental conditions although sometimes it represents a log2-expression level. 
#The AveExpr column gives the average log2-expression level for that gene across all the arrays and channels in the experiment. 
#Column t is the moderated t-statistic. 
#Column P.Value is the associated p-value and adj.P.Value is the p-value adjusted for multiple testing. 
#The most popular form of adjustment is "BH" which is Benjamini and Hochberg’s method to control the false discovery rate [1].

#一般为了验证有没有比反，或者验证操作有无失误，我们选择管家基因和Top基因来做出判断：
#例如：
exprSet['GAPDH',]
exprSet['ACTB',]
exprSet['XX Top1 gene name XX',]
